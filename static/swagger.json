{
  "components": {
    "securitySchemes": {
      "Bearer Auth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "bearerFormat": "JWT",
        "description": "Enter: **'Bearer &lt;JWT&gt;'**, where JWT is the access token"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "description": "Errors"
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "PlainImovel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "aluguel": {
            "type": "boolean",
            "default": true
          },
          "venda": {
            "type": "boolean",
            "default": true
          },
          "tipo": {
            "type": "string",
            "enum": [
              "apartamento",
              "casa",
              "terreno",
              "sala"
            ]
          },
          "ativo": {
            "type": "boolean",
            "default": true
          },
          "valor_venda": {
            "type": "number"
          },
          "valor_aluguel": {
            "type": "number"
          },
          "rua": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "cidade": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "imobiliaria_id": {
            "type": "integer"
          }
        },
        "required": [
          "bairro",
          "cep",
          "cidade",
          "estado",
          "imobiliaria_id",
          "numero",
          "rua"
        ]
      },
      "Imobiliaria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "nome_fantasia": {
            "type": "string"
          },
          "razao_social": {
            "type": "string",
            "nullable": true
          },
          "cnpj": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "imoveis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlainImovel"
            }
          }
        },
        "required": [
          "cnpj",
          "email",
          "nome_fantasia",
          "telefone"
        ]
      },
      "PlainImobiliaria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "nome_fantasia": {
            "type": "string"
          },
          "razao_social": {
            "type": "string",
            "nullable": true
          },
          "cnpj": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "cnpj",
          "email",
          "nome_fantasia",
          "telefone"
        ]
      },
      "Imovel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "aluguel": {
            "type": "boolean",
            "default": true
          },
          "venda": {
            "type": "boolean",
            "default": true
          },
          "tipo": {
            "type": "string",
            "enum": [
              "apartamento",
              "casa",
              "terreno",
              "sala"
            ]
          },
          "ativo": {
            "type": "boolean",
            "default": true
          },
          "valor_venda": {
            "type": "number"
          },
          "valor_aluguel": {
            "type": "number"
          },
          "rua": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "cidade": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "imobiliaria_id": {
            "type": "integer"
          },
          "imobiliaria": {
            "$ref": "#/components/schemas/PlainImobiliaria"
          }
        },
        "required": [
          "bairro",
          "cep",
          "cidade",
          "estado",
          "imobiliaria_id",
          "numero",
          "rua"
        ]
      },
      "PlainUsuarioLogin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string"
          },
          "senha": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "email",
          "senha"
        ]
      },
      "PlainToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "UsuarioToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string"
          },
          "imobiliaria": {
            "$ref": "#/components/schemas/PlainImobiliaria"
          },
          "token": {
            "$ref": "#/components/schemas/PlainToken"
          }
        },
        "required": [
          "email"
        ]
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNPROCESSABLE_ENTITY": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/imobiliaria": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imobiliaria"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Lista todas as imobili\u00e1rias.",
        "description": "**Descri\u00e7\u00e3o:** Busca e retorna todas as imobili\u00e1rias cadastradas no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 500.\n\n**Retorna:**\n    Uma lista de objetos JSON com as informa\u00e7\u00f5es das imobili\u00e1rias.",
        "tags": [
          "Imobiliaria"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imobiliaria"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainImobiliaria"
              }
            }
          }
        },
        "summary": "Cria uma nova imobili\u00e1ria.",
        "description": "**Descri\u00e7\u00e3o:** Recebe os dados de uma nova imobili\u00e1ria, valida e persiste no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    imobiliaria_data (dict): Os dados da imobili\u00e1ria a ser criada.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es da imobili\u00e1ria criada.",
        "tags": [
          "Imobiliaria"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/imobiliaria/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imobiliaria"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Busca uma imobili\u00e1ria pelo seu ID.",
        "description": "**Descri\u00e7\u00e3o:** Busca a imobili\u00e1ria pelo ID e retorna suas informa\u00e7\u00f5es.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 404 ou 500.\n\n**Par\u00e2metros:**\n    id (int): O ID da imobili\u00e1ria a ser buscada.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es da imobili\u00e1ria.",
        "tags": [
          "Imobiliaria"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imobiliaria"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainImobiliaria"
              }
            }
          }
        },
        "summary": "Atualiza uma imobili\u00e1ria existente.",
        "description": "**Descri\u00e7\u00e3o:** Recebe os dados de uma imobili\u00e1ria existente e atualiza suas informa\u00e7\u00f5es no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    imobiliaria_data (dict): Os dados da imobili\u00e1ria a ser atualizada.\n    id (int): O ID da imobili\u00e1ria a ser atualizada.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es da imobili\u00e1ria atualizada.",
        "tags": [
          "Imobiliaria"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "delete": {
        "responses": {
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Deleta uma imobili\u00e1ria pelo seu ID.",
        "description": "**Descri\u00e7\u00e3o:** Remove a imobili\u00e1ria com o ID especificado do banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    id (int): O ID da imobili\u00e1ria a ser deletada.\n\n**Retorna:**\n    Um objeto JSON com uma mensagem de confirma\u00e7\u00e3o.",
        "tags": [
          "Imobiliaria"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/imovel": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imovel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Lista todos os im\u00f3veis.",
        "description": "**Descri\u00e7\u00e3o:** Busca e retorna todos os im\u00f3veis cadastrados no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 500.\n\n**Retorna:**\n    Uma lista de objetos JSON com as informa\u00e7\u00f5es dos im\u00f3veis.",
        "tags": [
          "Imovel"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imovel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainImovel"
              }
            }
          }
        },
        "summary": "Cria um novo im\u00f3vel.",
        "description": "**Descri\u00e7\u00e3o:** Recebe os dados de um novo im\u00f3vel, valida e persiste no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    imovel_data (dict): Os dados do im\u00f3vel a ser criado.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es do im\u00f3vel criado.",
        "tags": [
          "Imovel"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/imovel/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imovel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Busca um im\u00f3vel pelo seu ID.",
        "description": "**Descri\u00e7\u00e3o:** Busca o im\u00f3vel pelo ID e retorna suas informa\u00e7\u00f5es.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 404 ou 500.\n\n**Par\u00e2metros:**\n    id (int): O ID do im\u00f3vel a ser buscado.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es do im\u00f3vel.",
        "tags": [
          "Imovel"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Imovel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainImovel"
              }
            }
          }
        },
        "summary": "Atualiza um im\u00f3vel existente.",
        "description": "**Descri\u00e7\u00e3o:** Recebe os dados de um im\u00f3vel existente e atualiza suas informa\u00e7\u00f5es no banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    imovel_data (dict): Os dados do im\u00f3vel a ser atualizado.\n    id (int): O ID do im\u00f3vel a ser atualizado.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es do im\u00f3vel atualizado.",
        "tags": [
          "Imovel"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "delete": {
        "responses": {
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Deleta um im\u00f3vel pelo seu ID.",
        "description": "**Descri\u00e7\u00e3o:** Remove o im\u00f3vel com o ID especificado do banco de dados.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    id (int): O ID do im\u00f3vel a ser deletado.\n\n**Retorna:**\n    Um objeto JSON com uma mensagem de confirma\u00e7\u00e3o.",
        "tags": [
          "Imovel"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/registrar": {
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainUsuarioLogin"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainUsuarioLogin"
              }
            }
          }
        },
        "summary": "Registra um novo usu\u00e1rio.",
        "description": "**Descri\u00e7\u00e3o:** Recebe os dados de um novo usu\u00e1rio, valida e persiste no banco de dados.\nSe o e-mail j\u00e1 estiver cadastrado, retorna um erro 409.\nSe ocorrer um erro durante a opera\u00e7\u00e3o de banco de dados, retorna um erro 400 ou 500.\n\n**Par\u00e2metros:**\n    usuario_data (dict): Os dados do usu\u00e1rio a ser criado.\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es do usu\u00e1rio criado.",
        "tags": [
          "Usu\u00e1rios"
        ]
      }
    },
    "/login": {
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainUsuarioLogin"
              }
            }
          }
        },
        "summary": "Realiza login de um usu\u00e1rio.",
        "description": "**Descri\u00e7\u00e3o:** Recebe as credenciais do usu\u00e1rio, valida e gera tokens de acesso e atualiza\u00e7\u00e3o.\nSe as credenciais forem inv\u00e1lidas, retorna um erro 401.\n\n**Par\u00e2metros:**\n    usuario_data (dict): As credenciais do usu\u00e1rio (e-mail e senha).\n\n**Retorna:**\n    Um objeto JSON com as informa\u00e7\u00f5es do usu\u00e1rio e os tokens de acesso e atualiza\u00e7\u00e3o.",
        "tags": [
          "Usu\u00e1rios"
        ]
      }
    },
    "/refresh": {
      "post": {
        "responses": {
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Gera um novo token de acesso usando um token de atualiza\u00e7\u00e3o.",
        "description": "**Descri\u00e7\u00e3o:** Gera um novo token de acesso a partir de um token de atualiza\u00e7\u00e3o v\u00e1lido.\nSe ocorrer um erro durante a opera\u00e7\u00e3o, retorna um erro 401.\n\n**Retorna:**\n    Um objeto JSON com o novo token de acesso.",
        "tags": [
          "Usu\u00e1rios"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/logout": {
      "post": {
        "responses": {
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Realiza o logout do usu\u00e1rio.",
        "description": "**Descri\u00e7\u00e3o:** Invalida o token de acesso atual, adicionando-o a uma lista de bloqueio.\nSe ocorrer um erro durante a opera\u00e7\u00e3o, retorna um erro 401.\n\n**Retorna:**\n    Um objeto JSON com uma mensagem de confirma\u00e7\u00e3o de logout.",
        "tags": [
          "Usu\u00e1rios"
        ],
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Midware API",
    "version": "v1"
  },
  "tags": [
    {
      "name": "Imobiliaria",
      "description": "Opera\u00e7\u00f5es sobre imobili\u00e1ria"
    },
    {
      "name": "Imovel",
      "description": "Opera\u00e7\u00f5es sobre imovel"
    },
    {
      "name": "Usu\u00e1rios",
      "description": "Opera\u00e7\u00f5es sobre o usu\u00e1rio"
    }
  ],
  "openapi": "3.0.3"
}